import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

class EmailSender:
    """
    Email sending engine using SMTP.
    Configured for Gmail but can be adapted for other providers.
    """

    def __init__(self, sender_email: str, sender_password: str, smtp_server: str = 'smtp.gmail.com', smtp_port: int = 587):
        self.sender_email = sender_email
        self.sender_password = sender_password
        self.smtp_server = smtp_server
        self.smtp_port = smtp_port

    def send_email(self, recipients: list, subject: str, body: str) -> bool:
        """
        Sends an email to the recipients.

        :param recipients: List of email addresses (strings)
        :param subject: Subject line of the email
        :param body: Plain text body content of the email
        :return: True if email sent successfully, else False
        """
        try:
            # Compose message
            msg = MIMEMultipart()
            msg['From'] = self.sender_email
            msg['To'] = ', '.join(recipients)
            msg['Subject'] = subject
            msg.attach(MIMEText(body, 'plain'))

            # Setup SMTP session
            server = smtplib.SMTP(self.smtp_server, self.smtp_port)
            server.starttls()  # Secure connection
            server.login(self.sender_email, self.sender_password)
            server.send_message(msg)
            server.quit()

            print(f"[EmailSender] Email successfully sent to: {recipients}")
            return True

        except Exception as e:
            print(f"[EmailSender][Error] Failed to send email: {str(e)}")
            return False


# Example usage within a larger AI workflow or script
def example_email_workflow():
    # Credentials need to be stored securely; here for demo purposes only
    sender_email = "your_email@gmail.com"  # Replace with your email address
    sender_password = "your_secure_app_password"  # Use App Password, NOT your Gmail user password

    recipient_emails = ["logan.lorentz9@gmail.com"]  # Recipient email(s)
    subject = "Atlas Intelligence Report"
    body = (
        "Hello Logan,\n\n"
        "This is a generated email from the Atlas Intelligence system to demonstrate sending emails.\n"
        "You can extend this system to send notifications, reports, alerts, etc.\n\n"
        "Best regards,\n"
        "Atlas Intelligence AI"
    )

    email_engine = EmailSender(sender_email, sender_password)
    success = email_engine.send_email(recipient_emails, subject, body)
    if success:
        print("[Workflow] Email sent successfully.")
    else:
        print("[Workflow] Email failed to send.")


if __name__ == "__main__":
    example_email_workflow()
