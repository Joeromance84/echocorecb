name: Security System Assessor

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly security audit
  workflow_dispatch:
    inputs:
      assessment_level:
        description: 'Security assessment level'
        required: true
        default: 'standard'
        type: choice
        options:
          - standard
          - deep
          - compliance

jobs:
  security-assessment:
    runs-on: ubuntu-latest
    name: Security System Assessment
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        
      - name: Run Security Audit
        run: |
          echo "🔒 Security Assessment Report" > security-report.md
          echo "================================" >> security-report.md
          echo "" >> security-report.md
          echo "**Assessment Time:** $(date)" >> security-report.md
          echo "**Trigger:** ${{ github.event_name }}" >> security-report.md
          echo "**Level:** ${{ github.event.inputs.assessment_level || 'standard' }}" >> security-report.md
          echo "" >> security-report.md
          
          # Dependency vulnerability check
          if [ -f "requirements.txt" ]; then
            echo "## Python Dependencies" >> security-report.md
            pip install safety
            safety check -r requirements.txt --json > safety-report.json || true
            python -c "
import json
try:
    with open('safety-report.json') as f:
        data = json.load(f)
    if data:
        print('⚠️ Found vulnerabilities in dependencies')
        for vuln in data:
            print(f'- {vuln.get("package", "unknown")}: {vuln.get("advisory", "No details")}')
    else:
        print('✅ No known vulnerabilities found')
except:
    print('✅ Dependencies appear secure')
" >> security-report.md
          fi
          
          # File permissions audit
          echo "" >> security-report.md
          echo "## File Security" >> security-report.md
          find . -type f -perm /u+x -name "*.py" | head -10 | while read file; do
            echo "- Executable Python file: $file" >> security-report.md
          done
          
          # Environment variable security
          echo "" >> security-report.md
          echo "## Environment Security" >> security-report.md
          if grep -r "password\|secret\|key" . --include="*.py" --include="*.yml" | head -5; then
            echo "⚠️ Potential secrets found in code" >> security-report.md
          else
            echo "✅ No obvious secrets in source code" >> security-report.md
          fi
          
      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-assessment-report
          path: security-report.md
          
      - name: Comment Security Assessment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('security-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## 🔒 Security Assessment\n\n' + report
            });
