# File: .github/workflows/main_build.yml

name: Live APK Build - EchoCoreCB

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install System Build Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git autoconf automake libtool

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # --- Strategic Patching Phase ---
      # Step 1: Force download of the libffi recipe.
      - name: Force Download of libffi Recipe
        run: |
          pip install buildozer
          buildozer --verbose android create --dist_name=dummy --requirements=libffi || true

      # Step 2: Apply the surgical patch to fix the autoconf error.
      - name: Apply Surgical libffi Autoconf Patch
        run: |
          LIBFFI_DIR=$(find ~/.buildozer/android/platform/build*/build/other_builds/libffi -name "libffi" -type d)
          if [ -d "$LIBFFI_DIR" ]; then
            echo "Found libffi directory: $LIBFFI_DIR"
            sed -i '1s/^/m4_pattern_allow([LT_SYS_SYMBOL_USCORE])\n/' "$LIBFFI_DIR/configure.ac"
            echo "Patch applied successfully."
          else
            echo "Warning: libffi directory not found. Patching skipped."
          fi
      # --- End of Strategic Phase ---

      # --- New Hybrid Integration Step ---
      # This step moves your Java file into the correct location for the buildozer toolchain.
      - name: Integrate Custom Java Source
        run: |
          APP_NAME=$(buildozer android get-p4a-dist-name)
          JAVA_DEST_DIR=".buildozer/android/platform/build-$APP_NAME/dists/$APP_NAME/src/main/java"
          mkdir -p "$JAVA_DEST_DIR"
          # Assuming your package is 'com.echocore', adjust as needed.
          PACKAGE_PATH="com/echocore/unified"
          FULL_DEST_PATH="$JAVA_DEST_DIR/$PACKAGE_PATH"
          mkdir -p "$FULL_DEST_PATH"
          cp EchoCoreUnifiedFuture.java "$FULL_DEST_PATH/"
          echo "Java file moved to: $FULL_DEST_PATH/EchoCoreUnifiedFuture.java"

      - name: Install Python Dependencies
        run: |
          pip install buildozer cython kivy python-for-android
          # If you have a requirements.txt file, uncomment the line below:
          # pip install -r requirements.txt

      - name: Create main.py
        run: |
          cat > main.py << 'EOF'
          from kivy.app import App
          from kivy.uix.label import Label
          
          class EchoCoreApp(App):
              def build(self):
                  return Label(text='EchoCoreCB - AGI Mobile Interface Ready')
          
          EchoCoreApp().run()
          EOF

      - name: Initialize Buildozer
        run: buildozer init || true

      - name: Build and package the APK
        run: yes | buildozer android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: EchoCoreCB-Mobile-AGI
          path: bin/*.apk
